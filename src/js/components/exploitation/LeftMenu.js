import React, { Component } from 'react';
import { connect } from 'react-redux';
import { explMyWG, explToMe, explDoneMe, explCancelClient } from 'Actions/actionExpl';
import {Nav,NavItem,Collapse,Button} from 'react-bootstrap';

class LeftMenu extends Component {
    constructor(props) {
        super(props);

        this.props.explMyWG();

        this.state = {
            checkedValue: true,
            collapse: true,
            width: '16.6%',

            hideClassName : 'fa fa-angle-left fa-2x',
            
            iconFilters : 'fa fa-filter',
            iconFilter1 : 'fa fa-users',
            iconFilter2 : 'fa fa-user-circle-o',
            iconFilter3 : 'fa fa-check-circle',
            iconFilter4 : 'fa fa-times-circle',
            
            nameFilters : 'Фильтры',
            nameFilter1 : 'На мой рабочие группы',
            nameFilter2 : 'Назначеные мне',
            nameFilter3 : 'Выполненые мной',
            nameFilter4 : 'Отозваны клиентом',

        };
        this.handleCheckedMenu = this.handleCheckedMenu.bind(this);
        this.toggle = this.toggle.bind(this);
    }

    toggle() {
        this.setState({ collapse: !this.state.collapse });
    }

    handleCheckedMenu(){
        this.setState({
            checkedValue: !this.state.checkedValue,
        });
    
        if(this.state.checkedValue == true){
            this.setState({
                width: '16.6%',

                hideClassName : 'fa fa-angle-left fa-2x',
                
                nameFilters : 'Фильтры',
                nameFilter1 : 'На мой рабочие группы',
                nameFilter2 : 'Назначеные мне',
                nameFilter3 : 'Выполненые мной',
                nameFilter4 : 'Отозваны клиентом',
               
            });
        }
        else {
            this.setState({
                width: '40px',

                hideClassName : 'fa fa-angle-right fa-2x',

                nameFilters : '',
                nameFilter1 : '',
                nameFilter2 : '',
                nameFilter3 : '',
                nameFilter4 : '',
               
            });           
        }
    }
    handleChecked() {
        // заглушка
    }
    render() {
        // Ширина меню
        const width = { width: this.state.width };

        return (
            <div className = "leftMenu" style = { width }>
                <div className = "menuFilters">
                        <Button onClick={this.toggle}><i className={this.state.iconFilters}></i>{' '}{this.state.nameFilters}</Button>
                        <Collapse  in={this.state.collapse}>
                        <Nav bsStyle="pills">
                            <NavItem eventKey={1} href="#" onClick={this.props.explMyWG}><i className={this.state.iconFilter1}></i>{' '}{this.state.nameFilter1}</NavItem>
                            <NavItem eventKey={2} href="#" onClick={this.props.explToMe}><i className={this.state.iconFilter2}></i>{' '}{this.state.nameFilter2}</NavItem>
                            <NavItem eventKey={3} href="#" onClick={this.props.explDoneMe}><i className={this.state.iconFilter3}></i>{' '}{this.state.nameFilter3}</NavItem>
                            <NavItem eventKey={4} href="#" onClick={this.props.explCancelClient}><i className={this.state.iconFilter4}></i>{' '}{this.state.nameFilter4}</NavItem>
                        </Nav>
                        </Collapse>
                    </div>
                <label>
                    <div className = "hideLeftMenu">
                        <input type = "checkbox"
                            checked = {this.state.checkedValue}
                            onClick = {this.handleCheckedMenu}
                            onChange={this.handleChecked}
                        />
                        {<i className={this.state.hideClassName}></i> }
                    </div>
                </label>     

           </div>
        );
    }
}

export default connect(
    state => ({
        //   login: state.signin.login,
        //   password: state.signin.password
    }),
    dispatch => ({
        explMyWG: () => {
            dispatch(explMyWG());
        },
        explToMe: () => {
            dispatch(explToMe());
        },
        explDoneMe: () => {
            dispatch(explDoneMe());
        },
        explCancelClient: () => {
            dispatch(explCancelClient());
        },
    })
)(LeftMenu);
